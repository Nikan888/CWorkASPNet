@using Microsoft.AspNetCore.Identity
@model Test_Project_Hotel.ViewModels.Services.ServicesViewModel
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Service management";
}
<h2>Service management</h2>

<form method="post">
    <div class="form-inline">
        <div asp-validation-summary="All" class="text-danger"></div>
        <label class="control-label">Service name: </label>
        @Html.TextBox("name", Model.ServiceFilterViewModel.Name,
                htmlAttributes: new { @class = "form-control", @id = "Car", style = "width:119px" })
        <label class="control-label">Worker: </label>
        @Html.DropDownList("SelectedWorker", Model.ServiceFilterViewModel.Workers as SelectList,
                htmlAttributes: new { @class = "form-control", @id = "SelectedWorker" })
        <input type="submit" value="Find" class="btn btn-default" style='width:90px' />
    </div>
</form>

<table class="table table-hover table-bordered text-center" id="tblemps">
    <thead>
        <tr>
            <th style="text-align: center;">
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.ServiceSortViewModel.NameSort)"
                   asp-route-name="@(Model.ServiceFilterViewModel.Name)"
                   asp-route-worker="@(Model.ServiceFilterViewModel.SelectedWorker)">Service name</a>
            </th>
            <th style="text-align: center;">
                Service description
            </th>
            <th style="text-align: center;">
                Entry date
            </th>
            <th style="text-align: center;">
                Departure date
            </th>
            <th style="text-align: center;">
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.ServiceSortViewModel.ClientFIOSort)"
                   asp-route-name="@(Model.ServiceFilterViewModel.Name)"
                   asp-route-worker="@(Model.ServiceFilterViewModel.SelectedWorker)">Client FIO</a>
            </th>
            <th style="text-align: center;">
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.ServiceSortViewModel.RoomTypeSort)"
                   asp-route-name="@(Model.ServiceFilterViewModel.Name)"
                   asp-route-worker="@(Model.ServiceFilterViewModel.SelectedWorker)">Room type</a>
            </th>
            <th style="text-align: center;">
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.ServiceSortViewModel.WorkerFIOSort)"
                   asp-route-name="@(Model.ServiceFilterViewModel.Name)"
                   asp-route-worker="@(Model.ServiceFilterViewModel.SelectedWorker)">Worker FIO</a>
            </th>
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "admin"))
            {
                <th style="text-align: center;">
                    <a class="btn btn-primary" asp-action="Create">Add service</a>
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Services)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ServiceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ServiceDescription)
                </td>
                <td>
                    @item.EntryDate.ToString("dd.MM.yyyy")
                </td>
                <td>
                    @item.DepartureDate.ToString("dd.MM.yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Client.ClientFIO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Room.RoomType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Worker.WorkerFIO)
                </td>
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "admin"))
                {
                    <td>
                        <form asp-action="Delete" asp-route-id="@item.ServiceID" method="post">
                            <a class="btn btn-sm btn-success glyphicon glyphicon-pencil" asp-action="Edit" asp-route-id="@item.ServiceID"></a>
                            <button type="submit" class="btn btn-sm btn-danger glyphicon glyphicon-trash"></button>
                        </form>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Back
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Forward
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
@if (Model.PageViewModel.TotalPages > 1)
{
    <br />
    <b>Page @Model.PageViewModel.PageNumber from @Model.PageViewModel.TotalPages</b>
}
